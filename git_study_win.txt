#Git 사용 방법 - windows편

- Git bash 실행 -> cd Documents/ -> pwd 

1. Git 로컬 저장소를 위한 새 폴더 만들기
 : mkdir 폴더명 -> cd 폴더명 -> pwd

2. Git 로컬 저장소를 위해 만든 새 폴더 정보 보기
 : git status (fatal : Not a git repository (or any of the parent directories) : .git)

- git status은 Git 저장소의 상태를 알려주는 명령으로 자주 사용한다. 
  즉, Git 저장소(정확하게는 워킹트리)에서만 정상적으로 수행되는 명령
  .git 폴더는 "git init" 실행하면 생성됨 !

3. Git 저장소 초기화
 : git init (Git 저장소 생성) -> ls -a (파일 목록 확인) -> git status (워킹 트리 상태 확인)

4. Git 전역 옵션 설정 / Git 기본 에디터 확인
 : git config --global user.name/user.email
 : git config --global core editor



<기본 CLI 명령어>

- git add 파일1 파일2 . . .  : 파일들을 스테이지에 추가

- git reset [파일명] . . . : 스테이징 취소 (=언스테이징)

- git commit : 스테이지에 있는 파일들을 커밋

"커밋 시, vsc 열림 첫 줄(작업 내용의 요약)과 둘째 줄(자세하게 작업 내용 기록) 사이는 반드시 한 줄 비워야 함 !! 
로그를 볼 때나 GitHub의 Pull Request 메뉴 등에서 이 규칙을 활용해서 내용을 자동으로 구성하기 때문 !! 
성공적으로 커밋을 완료하면 그 커밋 시점의 파일 상태로 언제든 복구 가능 & 커밋은 절대 사라지지 않음"

- git commit -a : add 명령을 생략하고 바로 커밋하고 싶을 때

- git log --online --graph --all --decorate :  zjalt ghkrdls

- git push [-u] [원격저장소별명] [브랜치이름] : 현재 브랜치에서 새로 생성한 커밋들을 원격저장소에 업로드, 
-u 옵션으로 브랜치의 업스트림을 등록할 수 있음. 한 번 등록한 후에는 git push만 입력

- git fetch [원격저장소별명] [브랜치이름] : 원격 저장소의 브랜치와 커밋들을 로컬 저장소와 동기

- git merge 브랜치이름 : 지정한 브랜치의 커밋들을 현재 브랜치 및 워킹트리에 반영



<원격저장소 관련 CLI 명령어>

1. 원격저장소 등록 및 push
 : git remote add origin 원격저장소 주소 -> git remote -v -> git push -u origin master (한 번만)-> git log --oneline -> git push

- git push -u 옵션을 지정하지 않고 바로 git push를 하면 오류 발생 : 로컬 저장소의 master 브랜치와 연결된 원격저장소의 브랜치가 없어서 발생 (업스트름 : 로컬저장소와 연결된 원격저장소)

2. 기존 remote origin 삭제
: git remote rm origin








